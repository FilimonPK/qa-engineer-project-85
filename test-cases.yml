---
- summary: |
    Проверка входа пользователя посредством существующего аккаунта на Github
  requirement: |
    При нажатии кнопки "Sign with Github" пользователь должен войти в систему
  prerequisites: |
    Открыта страница логина
    Пользователь авторизован на сайте Github в текущем браузере
  test-data: |
    Существующие данные пользователя Github
    Логин = loginGithub Пароль = passwordGithub
  steps:
    - Нажимаем кнопку "Sign with Github"
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка работы формы восстановления пароля пользователя "Forgot your password?" на валидный Email
  requirement: |
    Пользователь должен получить письмо о восстановлении пароля на введенный валидный Email пользователя
  prerequisites: |
    Открыта страница логина и нажата ссылка "Forgot your password?"
  test-data: |
    Email = Email@gmail.com
  steps:
    - Вводим валидный Email
    - Нажимаем кнопку "Submit"
    - получаем письмо на указанный валидный о восстановлении пароля пользователя
  expected-result: |
    Пользователь должен получить письмо на указанный валидный Email о восстановлении пароля пользователя

- summary: |
    Проверка работы формы восстановления пароля пользователя "Forgot your password?" на НЕвалидный Email
  requirement: |
    Пользователь НЕ должен получить письмо о восстановлении пароля на введенный НЕвалидный Email пользователя
  prerequisites: |
    Открыта страница логина и нажата ссылка "Forgot your password?"
    Имеется доступ к указанному НЕвалидному Email
  test-data: |
    Email = NONvalidEmail@gmail.com
  steps:
    - Вводим существующий НЕвалидный Email
    - Нажимаем кнопку "Submit"
    - Получаем сообщение "Не верно указан Email"
    - проверяем входящие письма на НЕвалидный Email
    - НЕ получаем письмо на указанный НЕвалидный Email о восстановлении пароля пользователя
  expected-result: |
    - получено сообщение формы "Не верно указан Email", 
    - отсутствует письмо о восстановлении пароля на указанный НЕвалидный существующий Email
    
- summary: |
    Проверка сортировки Users rating по колонкам "Rank", "Rating" и соотношения между ними
  requirement: |
    Соблюдается соотношение: чем больше "Rating" пользователя, тем ближе его "Rank" к №1
  prerequisites: |
    - пользователь авторизован на сайте
    - открыта страница Users rating
  test-data: |
    Существующие данные пользователя Github
    Логин = loginGithub Пароль = passwordGithub
  steps:
    - Сортируем пользователей по колонке "Rank" по возрастанию
    - Сортируем пользователей по колонке "Rank" по убыванию
    - Сортируем пользователей по колонке "Rating" по возрастанию
    - Сортируем пользователей по колонке "Rating" по убыванию
    - Соотносим присвоение системой места в "Rank" и послученые баллы в "Rating"
  expected-result: |
    Выполняется сортировка по колонкам "Rank", "Rating", как по убыванию, так и по возрастанию
    Соблюдается соотношение: чем больше "Rating" пользователя, тем ближе его "Rank" к №1
